{
    "openapi": "3.0.0",
    "info": {
        "title": "UOMI API",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://uomi.ringhus.dk",
            "description": "UOMI API Server",
            "variables": {
                "schema": {
                    "enum": [
                        "http",
                        "https"
                    ],
                    "default": "https"
                },
                "host": {
                    "default": "uomi.ringhus.dk"
                },
                "port": {
                    "default": "443"
                },
                "basePath": {
                    "default": "/api"
                }
            }
        }
    ],
    "paths": {
        "/api": {},
        "/api/groups/{id}/add-user": {
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Add a user to a group",
                "description": "This endpoint is used to add a user to a group.",
                "operationId": "addUserToGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the group",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email of the user to add to the group",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User added to group successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User added to group successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BadRequestError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/groups/{id}": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Get a group",
                "description": "Returns a single group with all its information",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "group",
                        "in": "path",
                        "description": "Group id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "You are not authorized to view this group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Groups"
                ],
                "summary": "Update a group",
                "description": "This endpoint is used to update a group.",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the group",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the group",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Delete a group",
                "description": "This endpoint is used to delete a group.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the group",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForbiddenError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/groups": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Get all groups",
                "description": "Get all groups",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "": {
                                                    "$ref": "#/components/schemas/Group"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Create a new group",
                "description": "This endpoint is used to create a new group.",
                "operationId": "store",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the group",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "Group 1"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnauthorizedError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register",
                "description": "This endpoint is used to register a new user.",
                "operationId": "6cd4a8afb20be55c12cf820331f54ce4",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The name of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "The email of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "password"
                        }
                    },
                    {
                        "name": "device_name",
                        "in": "query",
                        "description": "The name of the device",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john.doe@example.com"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "The message returned when the email already exists",
                                            "type": "string",
                                            "example": "Email already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "description": "This endpoint is used to login.",
                "operationId": "b12e417f73d4e905041e3e87641dca4d",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "device_name",
                        "in": "query",
                        "description": "The name of the device",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john.doe@example.com"
                                        },
                                        "email_verified_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "The message returned when the credentials are invalid",
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "BadRequestError": {
                "description": "Bad Request - The request was invalid or cannot be served. The exact error should be explained in the error payload. E.g. „The JSON is not valid“",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Bad Request"
                    }
                },
                "type": "object"
            },
            "UnauthorizedError": {
                "description": "Unauthorized - Access token is missing or invalid",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Unauthorized"
                    }
                },
                "type": "object"
            },
            "ForbiddenError": {
                "description": "Forbidden - You don't have permission to access this resource",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Forbidden"
                    }
                },
                "type": "object"
            },
            "NotFoundError": {
                "description": "Not Found - The resource you are looking for was not found",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Not Found"
                    }
                },
                "type": "object"
            },
            "Group": {
                "title": "Group schema",
                "properties": {
                    "id": {
                        "description": "Group id",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "description": "Group name",
                        "type": "string",
                        "example": "Group 1"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User schema",
                "properties": {
                    "id": {
                        "description": "User id",
                        "type": "integer",
                        "example": 1,
                        "nullable": false
                    },
                    "name": {
                        "description": "User name",
                        "type": "string",
                        "example": "John Doe",
                        "nullable": false
                    },
                    "email": {
                        "description": "User email",
                        "type": "string",
                        "example": "demo@example.com",
                        "nullable": false
                    },
                    "created_at": {
                        "description": "User created at",
                        "type": "string",
                        "example": "2021-01-01 00:00:00",
                        "nullable": false
                    },
                    "updated_at": {
                        "description": "User updated at",
                        "type": "string",
                        "example": "2021-01-01 00:00:00",
                        "nullable": false
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}